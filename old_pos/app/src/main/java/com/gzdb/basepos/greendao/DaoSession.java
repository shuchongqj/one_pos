package com.gzdb.basepos.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.gzdb.sale.bean.SaleType3;
import com.gzdb.supermarket.been.ItemSnapshotsBean;
import com.gzdb.supermarket.been.GoodBean;
import com.gzdb.supermarket.been.FinishOrderData;
import com.gzdb.supermarket.been.GoodTypesBean;
import com.gzdb.supermarket.been.GoodUnitBean;
import com.gzdb.vaservice.bean.Record;

import com.gzdb.basepos.greendao.SaleType3Dao;
import com.gzdb.basepos.greendao.ItemSnapshotsBeanDao;
import com.gzdb.basepos.greendao.GoodBeanDao;
import com.gzdb.basepos.greendao.FinishOrderDataDao;
import com.gzdb.basepos.greendao.GoodTypesBeanDao;
import com.gzdb.basepos.greendao.GoodUnitBeanDao;
import com.gzdb.basepos.greendao.RecordDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig saleType3DaoConfig;
    private final DaoConfig itemSnapshotsBeanDaoConfig;
    private final DaoConfig goodBeanDaoConfig;
    private final DaoConfig finishOrderDataDaoConfig;
    private final DaoConfig goodTypesBeanDaoConfig;
    private final DaoConfig goodUnitBeanDaoConfig;
    private final DaoConfig recordDaoConfig;

    private final SaleType3Dao saleType3Dao;
    private final ItemSnapshotsBeanDao itemSnapshotsBeanDao;
    private final GoodBeanDao goodBeanDao;
    private final FinishOrderDataDao finishOrderDataDao;
    private final GoodTypesBeanDao goodTypesBeanDao;
    private final GoodUnitBeanDao goodUnitBeanDao;
    private final RecordDao recordDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        saleType3DaoConfig = daoConfigMap.get(SaleType3Dao.class).clone();
        saleType3DaoConfig.initIdentityScope(type);

        itemSnapshotsBeanDaoConfig = daoConfigMap.get(ItemSnapshotsBeanDao.class).clone();
        itemSnapshotsBeanDaoConfig.initIdentityScope(type);

        goodBeanDaoConfig = daoConfigMap.get(GoodBeanDao.class).clone();
        goodBeanDaoConfig.initIdentityScope(type);

        finishOrderDataDaoConfig = daoConfigMap.get(FinishOrderDataDao.class).clone();
        finishOrderDataDaoConfig.initIdentityScope(type);

        goodTypesBeanDaoConfig = daoConfigMap.get(GoodTypesBeanDao.class).clone();
        goodTypesBeanDaoConfig.initIdentityScope(type);

        goodUnitBeanDaoConfig = daoConfigMap.get(GoodUnitBeanDao.class).clone();
        goodUnitBeanDaoConfig.initIdentityScope(type);

        recordDaoConfig = daoConfigMap.get(RecordDao.class).clone();
        recordDaoConfig.initIdentityScope(type);

        saleType3Dao = new SaleType3Dao(saleType3DaoConfig, this);
        itemSnapshotsBeanDao = new ItemSnapshotsBeanDao(itemSnapshotsBeanDaoConfig, this);
        goodBeanDao = new GoodBeanDao(goodBeanDaoConfig, this);
        finishOrderDataDao = new FinishOrderDataDao(finishOrderDataDaoConfig, this);
        goodTypesBeanDao = new GoodTypesBeanDao(goodTypesBeanDaoConfig, this);
        goodUnitBeanDao = new GoodUnitBeanDao(goodUnitBeanDaoConfig, this);
        recordDao = new RecordDao(recordDaoConfig, this);

        registerDao(SaleType3.class, saleType3Dao);
        registerDao(ItemSnapshotsBean.class, itemSnapshotsBeanDao);
        registerDao(GoodBean.class, goodBeanDao);
        registerDao(FinishOrderData.class, finishOrderDataDao);
        registerDao(GoodTypesBean.class, goodTypesBeanDao);
        registerDao(GoodUnitBean.class, goodUnitBeanDao);
        registerDao(Record.class, recordDao);
    }
    
    public void clear() {
        saleType3DaoConfig.clearIdentityScope();
        itemSnapshotsBeanDaoConfig.clearIdentityScope();
        goodBeanDaoConfig.clearIdentityScope();
        finishOrderDataDaoConfig.clearIdentityScope();
        goodTypesBeanDaoConfig.clearIdentityScope();
        goodUnitBeanDaoConfig.clearIdentityScope();
        recordDaoConfig.clearIdentityScope();
    }

    public SaleType3Dao getSaleType3Dao() {
        return saleType3Dao;
    }

    public ItemSnapshotsBeanDao getItemSnapshotsBeanDao() {
        return itemSnapshotsBeanDao;
    }

    public GoodBeanDao getGoodBeanDao() {
        return goodBeanDao;
    }

    public FinishOrderDataDao getFinishOrderDataDao() {
        return finishOrderDataDao;
    }

    public GoodTypesBeanDao getGoodTypesBeanDao() {
        return goodTypesBeanDao;
    }

    public GoodUnitBeanDao getGoodUnitBeanDao() {
        return goodUnitBeanDao;
    }

    public RecordDao getRecordDao() {
        return recordDao;
    }

}
